[tool.poetry]
name = "django-unfold"
version = "0.69.0"
description = "Modern Django admin theme for seamless interface development"
license = "MIT"
readme = "README.md"
authors = []
homepage = "https://unfoldadmin.com"
repository = "https://github.com/unfoldadmin/django-unfold"
packages = [{ include = "unfold", from = "src" }]
keywords = ["django", "admin", "tailwind", "theme"]
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Operating System :: OS Independent",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "Framework :: Django",
]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
django = ">=4.2"

[tool.poetry.group.test.dependencies]
pytest = "^8.4"
pytest-django = "^4.11"
pytest-factoryboy = "^2.8"
tox = "^4.30"
django-money = "^3.5"

[tool.poetry.group.dev.dependencies]
python-semantic-release = "^10.4"

[tool.ruff]
fix = true
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B905", # zip() without strict=True
    "C901", # too complex
]

[tool.semantic_release]
tag_format = "{version}"
major_on_zero = false
allow_zero_version = true
version_toml = ["pyproject.toml:tool.poetry.version"]

[tool.semantic_release.changelog]
mode = "init"
exclude_commit_patterns = [
    "chore: version bump",
    '''chore(?:\(deps\))?: .+''',
    '''chore(?:\(deps-dev\))?: .+'''
]

[tool.semantic_release.publish]
upload_to_vcs_release = false

[tool.pytest.ini_options]
addopts = """\
    --strict-config
    --strict-markers
    --ds=example.settings
    """
pythonpath = "tests/server"
django_find_project = false

[tool.tox]
legacy_tox_ini = """
    [tox]
    isolated_build = true
    envlist =
        python{310,311,312,313,314}-django{42,50,51,52}

    [testenv]
    skip_install = true
    allowlist_externals = poetry
    set_env =
        PYTHONDEVMODE = 1
    commands_pre = poetry install
    commands = poetry run python -m pytest tests/
"""

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

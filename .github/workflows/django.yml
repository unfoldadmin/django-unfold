name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  RANDOM_SEED: ${{ github.run_id }}

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    - name: Install run dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry==1.5.0
        python -m pip install tox-gh-actions
        python -m pip install coverage

    - name: Configure poetry
      run: |
        python -m poetry config virtualenvs.in-project true

    - name: Cache the virtualenv
      uses: actions/cache@v3
      with:
        path: ./.venv
        key: ${{ runner.os }}-${{ matrix.python-version }}-venv-${{ hashFiles('**/poetry.lock') }}

    - name: Install app dependencies
      run: |
        python -m poetry install --with testing

    - name: Run tests with coverage
      run: |
        echo "Random seed: $RANDOM_SEED"
        export RANDOM_SEED
        chmod +x runtests.sh
        coverage run --source='.' runtests.sh

  finish:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ./coverage/lcov.info
        parallel: true
